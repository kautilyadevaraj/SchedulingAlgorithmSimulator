class Item:
    def __init__(self , item_id , profit , weight):
        self.id = item_id
        self.profit = profit
        self.weight = weight
        self.ratio = profit / weight

def compare(item):
    return item.ratio
        
def knapsack(items , capacity):
    total_weight = 0
    total_profit = 0
    selected_items = []
    items.sort(key=compare , reverse = True)
    
    for item in items:
        if total_weight + item.weight < capacity:
            total_weight += item.weight
            selected_items.append(item)
            total_profit += item.profit
        else:
            remaining_capacity = capacity - total_weight
            fraction = remaining_capacity / item.weight
            total_weight += remaining_capacity
            total_profit += item.profit * fraction
            selected_items.append(item)
            break
    
    print(f"Total profit : {total_profit}")
    print(f"Total weight : {total_weight}")
    print("Selected Items are-")
    for item in selected_items:
        print(f"Item id : {item.id} , Item Profit : {item.profit} , Item weight : {item.weight}")

items = [
    Item(1 , 60 , 10),
    Item(2 , 100 , 20),
    Item(3 , 120 , 30)
]

knapsack(items , 50)